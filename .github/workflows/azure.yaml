name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]  # Trigger workflow on push to main branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      ACR_NAME: cloudev
      RESOURCE_GROUP: MyResourceGroup2
      APP_NAME: cloudev-app

    steps:
      # 1. Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in to Azure using a service principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Log in to Azure Container Registry
      - name: Docker Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 4. Build and push backend Docker image
      - name: Build and Push Backend Image
        run: |
          docker build -t $ACR_NAME.azurecr.io/backend:latest -f backend/Dockerfile ./backend
          docker push $ACR_NAME.azurecr.io/backend:latest

      # 5. Build and push frontend Docker image
      - name: Build and Push Frontend Image
        run: |
          docker build -t $ACR_NAME.azurecr.io/frontend:latest -f frontend/Dockerfile ./frontend
          docker push $ACR_NAME.azurecr.io/frontend:latest

      # 6. Deploy to Azure App Service
      - name: Deploy to Azure App Service
        run: |
          az webapp config container set \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --multicontainer-config-file docker-compose-azure.yml \
            --docker-registry-server-url https://$ACR_NAME.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}
